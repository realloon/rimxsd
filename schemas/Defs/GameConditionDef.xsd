<?xml version="1.0" encoding="UTF-8"?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:include schemaLocation="../Shared/common.xsd" />
  <xs:include schemaLocation="../Shared/enum.xsd" />
  <xs:include schemaLocation="../Shared/custom.xsd" />
  <xs:include schemaLocation="../Shared/attributes.xsd" />

  <xs:complexType name="GameConditionDefType">
    <xs:annotation>
      <xs:documentation>XML definition for RimWorld's GameConditionDef type.</xs:documentation>
    </xs:annotation>
    <xs:all>
      <!-- #region Inherit DefType -->
      <xs:element name="defName" type="DefNameType" minOccurs="0">
        <xs:annotation>
          <xs:documentation>The name of this Def. It is used as an identifier by the game code.
            Default: "UnnamedDef"</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="label" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>The name of this Def. It is used as an identifier by the game code.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="description" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>A human-readable description given when the Def is inspected by players.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="descriptionHyperlinks" minOccurs="0">
        <xs:complexType>
          <xs:sequence>
            <xs:any />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="ignoreConfigErrors" type="BooleanType" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Disables config error checking. Intended for mod use. (Be careful!)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="ignoreIllegalLabelCharacterConfigError" type="BooleanType" minOccurs="0" />
      <xs:element name="modExtensions" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Mod-specific data. Not used by core game code.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element name="li" type="DefModExtensionType" minOccurs="0" maxOccurs="unbounded" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="shortHash" type="xs:unsignedShort" minOccurs="0" />
      <xs:element name="index" type="xs:unsignedShort" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Default: ushort.MaxValue</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="modContentPack" minOccurs="0" />
      <xs:element name="fileName" type="xs:string" minOccurs="0" />
      <xs:element name="generated" type="BooleanType" minOccurs="0" />
      <xs:element name="debugRandomId" type="xs:unsignedShort" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Default: (ushort) Rand.RangeInclusive(0, (int) ushort.MaxValue)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <!-- #endregion -->

      <xs:element name="conditionClass" type="DefNameType" minOccurs="0" />
      <xs:element name="startMessage" type="xs:string" minOccurs="0" />
      <xs:element name="endMessage" type="xs:string" minOccurs="0" />
      <xs:element name="letterText" type="xs:string" minOccurs="0" />
      <xs:element name="letterHyperlinks" minOccurs="0">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="li" type="DefNameType" minOccurs="0" maxOccurs="unbounded" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="letterDef" type="DefNameType" minOccurs="0" />
      <xs:element name="canBePermanent" type="xs:boolean" minOccurs="0" />
      <xs:element name="allowUnderground" type="xs:boolean" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Default: true</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="descriptionFuture" type="xs:string" minOccurs="0" />
      <xs:element name="jumpToSourceKey" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Default: "ClickToJumpToSource"</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="silencedByConditions" minOccurs="0">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="li" type="GameConditionDefType" minOccurs="0"
              maxOccurs="unbounded" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="natural" type="xs:boolean" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Default: true</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="preventNeutralVisitors" type="xs:boolean" minOccurs="0" />
      <xs:element name="preventIncidents" type="xs:boolean" minOccurs="0" />
      <xs:element name="displayOnUI" type="xs:boolean" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Default: true</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="pennedAnimalsSeekShelter" type="xs:boolean" minOccurs="0" />
      <xs:element name="defaultDroneLevel" type="PsychicDroneLevelType" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Default: PsychicDroneLevel.BadMedium</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="preventRain" type="xs:boolean" minOccurs="0" />
      <xs:element name="weatherDef" type="DefNameType" minOccurs="0" />
      <xs:element name="temperatureOffset" type="xs:float" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Default: -10f</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="minNearbyPollution" type="xs:float" minOccurs="0" />
      <xs:element name="mtbOverNearbyPollutionCurve" type="SimpleCurveType" minOccurs="0" />
    </xs:all>

    <xs:attributeGroup ref="DefAttributeGroup" />
  </xs:complexType>
</xs:schema>