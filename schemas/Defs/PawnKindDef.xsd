<?xml version="1.0" encoding="UTF-8"?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:include schemaLocation="../Shared/custom.xsd" />
  <xs:include schemaLocation="../Shared/common.xsd" />
  <xs:include schemaLocation="../Shared/enum.xsd" />
  <xs:include schemaLocation="../Shared/attributes.xsd" />

  <xs:complexType name="PawnKindDefType">
    <xs:annotation>
      <xs:documentation>XML definition for RimWorld's PawnKindDef type.</xs:documentation>
    </xs:annotation>

    <xs:all>
      <!-- #region Inherit DefType -->
      <xs:element name="defName" type="DefNameType" minOccurs="0">
        <xs:annotation>
          <xs:documentation>The name of this Def. It is used as an identifier by the game code.
            Default: "UnnamedDef"</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="label" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>The name of this Def. It is used as an identifier by the game code.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="description" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>A human-readable description given when the Def is inspected by players.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="descriptionHyperlinks" minOccurs="0" />
      <xs:element name="ignoreConfigErrors" type="BooleanType" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Disables config error checking. Intended for mod use. (Be careful!)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="ignoreIllegalLabelCharacterConfigError" type="BooleanType" minOccurs="0" />
      <xs:element name="modExtensions" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Mod-specific data. Not used by core game code.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element name="li" type="DefModExtensionType" minOccurs="0" maxOccurs="unbounded" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="shortHash" type="xs:unsignedShort" minOccurs="0" />
      <xs:element name="index" type="xs:unsignedShort" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Default: ushort.MaxValue</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="modContentPack" minOccurs="0" />
      <xs:element name="fileName" type="xs:string" minOccurs="0" />
      <xs:element name="generated" type="BooleanType" minOccurs="0" />
      <xs:element name="debugRandomId" type="xs:unsignedShort" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Default: (ushort) Rand.RangeInclusive(0, (int) ushort.MaxValue)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <!-- #endregion -->

      <xs:element name="race" type="DefNameType" minOccurs="0" />
      <xs:element name="defaultFactionType" type="DefNameType" minOccurs="0" />
      <xs:element name="backstoryFilters" minOccurs="0">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="li" type="BackstoryCategoryFilterType" minOccurs="0"
              maxOccurs="unbounded" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="backstoryFiltersOverride" minOccurs="0">
        <xs:complexType>
          <xs:sequence minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="BackstoryCategoryFilterType" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="backstoryCategories" minOccurs="0">
        <xs:complexType>
          <xs:sequence minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="labelPlural" type="xs:string" minOccurs="0" />
      <xs:element name="lifeStages" minOccurs="0">
        <xs:complexType>
          <xs:sequence minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li">
              <xs:complexType>
                <xs:complexContent>
                  <xs:extension base="PawnKindLifeStageType">
                    <xs:attribute name="MayRequire" type="DependenciesType" />
                  </xs:extension>
                </xs:complexContent>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
          <xs:attribute name="Inherit" type="BooleanType" />
        </xs:complexType>
      </xs:element>
      <xs:element name="alternateGraphics" minOccurs="0">
        <xs:complexType>
          <xs:sequence minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="AlternateGraphicType" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="forcedTraits" minOccurs="0">
        <xs:complexType>
          <xs:sequence minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="TraitRequirementType" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="disallowedTraitsWithDegree" minOccurs="0">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="li" type="TraitRequirementType" minOccurs="0"
              maxOccurs="unbounded" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="disallowedTraits" minOccurs="0">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="li" type="DefNameType" minOccurs="0" maxOccurs="unbounded" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="alternateGraphicChance" type="xs:float" minOccurs="0" />
      <xs:element name="mutant" type="DefNameType" minOccurs="0" />
      <xs:element name="xenotypeSet" type="XenotypeSetType" minOccurs="0" />
      <xs:element name="useFactionXenotypes" type="xs:boolean" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Default: true</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="styleItemTags" minOccurs="0">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="li" type="StyleItemTagWeightedType" minOccurs="0"
              maxOccurs="unbounded" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="forcedHair" type="DefNameType" minOccurs="0" />
      <xs:element name="missingParts" minOccurs="0">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="li" type="MissingPartType" minOccurs="0" maxOccurs="unbounded" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="nameMaker" type="DefNameType" minOccurs="0" />
      <xs:element name="nameMakerFemale" type="DefNameType" minOccurs="0" />
      <xs:element name="abilities" minOccurs="0">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="li" type="DefNameType" minOccurs="0" maxOccurs="unbounded" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="preventIdeo" type="xs:boolean" minOccurs="0" />
      <xs:element name="studiableAsPrisoner" type="xs:boolean" minOccurs="0" />
      <xs:element name="isBoss" type="xs:boolean" minOccurs="0" />
      <xs:element name="fixedChildBackstories" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Default: new List&lt;BackstoryDef&gt;()</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element name="li" type="DefNameType" minOccurs="0" maxOccurs="unbounded" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="fixedAdultBackstories" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Default: new List&lt;BackstoryDef&gt;()</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element name="li" type="DefNameType" minOccurs="0" maxOccurs="unbounded" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="backstoryCryptosleepCommonality" type="xs:float" minOccurs="0" />
      <xs:element name="minGenerationAge" minOccurs="0">
        <xs:complexType>
          <xs:simpleContent>
            <xs:extension base="xs:integer">
              <xs:attribute name="MayRequire" type="DependenciesType"></xs:attribute>
            </xs:extension>
          </xs:simpleContent>
        </xs:complexType>
      </xs:element>
      <xs:element name="maxGenerationAge" type="xs:integer" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Default: 999999</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="factionLeader" type="xs:boolean" minOccurs="0" />
      <xs:element name="allowOldAgeInjuries" type="xs:boolean" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Default: true</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="generateInitialNonFamilyRelations" type="xs:boolean" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Default: true</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="destroyGearOnDrop" type="xs:boolean" minOccurs="0" />
      <xs:element name="canStrip" type="xs:boolean" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Default: true</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="defendPointRadius" type="xs:float" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Default: -1f</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="factionHostileOnKill" type="xs:boolean" minOccurs="0" />
      <xs:element name="factionHostileOnDeath" type="xs:boolean" minOccurs="0" />
      <xs:element name="hostileToAll" type="xs:boolean" minOccurs="0" />
      <xs:element name="forceNoDeathNotification" type="xs:boolean" minOccurs="0" />
      <xs:element name="skipResistant" type="xs:boolean" minOccurs="0" />
      <xs:element name="controlGroupPortraitZoom" type="xs:float" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Default: 1f</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="forceDeathOnDowned" type="xs:boolean" minOccurs="0" />
      <xs:element name="immuneToGameConditionEffects" type="xs:boolean" minOccurs="0" />
      <xs:element name="immuneToTraps" type="xs:boolean" minOccurs="0" />
      <xs:element name="collidesWithPawns" type="xs:boolean" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Default: true</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="ignoresPainShock" type="xs:boolean" minOccurs="0" />
      <xs:element name="canMeleeAttack" type="xs:boolean" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Default: true</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="basePrisonBreakMtbDays" type="xs:float" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Default: 60f</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="useFixedRotation" type="xs:boolean" minOccurs="0" />
      <xs:element name="fixedRotation" type="xs:string" minOccurs="0" />
      <xs:element name="showInDebugSpawner" type="xs:boolean" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Default: true</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="overrideDebugActionCategory" type="xs:string" minOccurs="0" />
      <xs:element name="royalTitleChance" type="xs:float" minOccurs="0" />
      <xs:element name="titleRequired" type="DefNameType" minOccurs="0" />
      <xs:element name="minTitleRequired" type="DefNameType" minOccurs="0" />
      <xs:element name="titleSelectOne" minOccurs="0">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="li" type="DefNameType" minOccurs="0" maxOccurs="unbounded" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="allowRoyalRoomRequirements" type="xs:boolean" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Default: true</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="allowRoyalApparelRequirements" type="xs:boolean" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Default: true</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="meleeAttackInfectionPathways" minOccurs="0">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="li" type="DefNameType" minOccurs="0"
              maxOccurs="unbounded" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="rangedAttackInfectionPathways" minOccurs="0">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="li" type="DefNameType" minOccurs="0"
              maxOccurs="unbounded" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="isFighter" type="xs:boolean" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Default: true</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="combatPower" type="xs:float" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Default: -1f</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="canArriveManhunter" type="xs:boolean" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Default: true</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="canBeSapper" type="xs:boolean" minOccurs="0" />
      <xs:element name="isGoodBreacher" type="xs:boolean" minOccurs="0" />
      <xs:element name="allowInMechClusters" type="xs:boolean" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Default: true</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="maxPerGroup" type="xs:integer" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Default: int.MaxValue</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="isGoodPsychicRitualInvoker" type="xs:boolean" minOccurs="0" />
      <xs:element name="canBeScattered" type="xs:boolean" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Default: true</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="aiAvoidCover" type="xs:boolean" minOccurs="0" />
      <xs:element name="fleeHealthThresholdRange" type="FloatRangeType" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Default: new FloatRange(-0.4f, 0.4f)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="acceptArrestChanceFactor" type="xs:float" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Default: 1f</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="canUseAvoidGrid" type="xs:boolean" minOccurs="0" />
      <xs:element name="itemQuality" type="QualityCategoryType" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Default: QualityCategory.Normal</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="forceNormalGearQuality" type="xs:boolean" minOccurs="0" />
      <xs:element name="gearHealthRange" type="FloatRangeType" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Default: FloatRange.One</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="weaponMoney" type="FloatRangeType" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Default: FloatRange.Zero</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="weaponTags" minOccurs="0">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="li" type="xs:string" minOccurs="0" maxOccurs="unbounded" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="weaponStuffOverride" type="DefNameType" minOccurs="0" />
      <xs:element name="weaponStyleDef" type="DefNameType" minOccurs="0" />
      <xs:element name="apparelMoney" type="FloatRangeType" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Default: FloatRange.Zero</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="apparelRequired" minOccurs="0">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="li" type="DefNameType" minOccurs="0" maxOccurs="unbounded" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="apparelTags" minOccurs="0">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="li" type="xs:string" minOccurs="0" maxOccurs="unbounded" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="apparelDisallowTags" minOccurs="0">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="li" type="xs:string" minOccurs="0" maxOccurs="unbounded" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="apparelAllowHeadgearChance" type="xs:float" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Default: 1f</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="apparelIgnoreSeasons" type="xs:boolean" minOccurs="0" />
      <xs:element name="apparelIgnorePollution" type="xs:boolean" minOccurs="0" />
      <xs:element name="ignoreFactionApparelStuffRequirements" type="xs:boolean" minOccurs="0" />
      <xs:element name="apparelColor" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Default: Color.white</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="ignoreIdeoApparelColors" type="xs:boolean" minOccurs="0" />
      <xs:element name="specificApparelRequirements" minOccurs="0">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="li" type="SpecificApparelRequirementType" minOccurs="0"
              maxOccurs="unbounded" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="techHediffsRequired" type="DefNameListType" minOccurs="0" />
      <xs:element name="techHediffsMoney" type="FloatRangeType" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Default: FloatRange.Zero</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="techHediffsTags" minOccurs="0">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="li" type="xs:string" minOccurs="0" maxOccurs="unbounded" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="techHediffsDisallowTags" minOccurs="0">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="li" type="xs:string" minOccurs="0" maxOccurs="unbounded" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="techHediffsChance" minOccurs="0">
        <xs:complexType>
          <xs:simpleContent>
            <xs:extension base="xs:float">
              <xs:attribute name="MayRequire" type="DependenciesType" />
            </xs:extension>
          </xs:simpleContent>
        </xs:complexType>
      </xs:element>
      <xs:element name="techHediffsMaxAmount" type="xs:integer" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Default: 1</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="biocodeWeaponChance" type="xs:float" minOccurs="0" />
      <xs:element name="humanPregnancyChance" type="xs:float" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Default: 0.03f</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="startingHediffs" minOccurs="0">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="li" type="StartingHediffType" minOccurs="0" maxOccurs="unbounded" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="nakedChance" type="xs:float" minOccurs="0" />
      <xs:element name="existingDamage" minOccurs="0">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="li" type="MiscDamageType" minOccurs="0" maxOccurs="unbounded" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="minApparelQuality" type="QualityCategoryType" minOccurs="0" />
      <xs:element name="maxApparelQuality" type="QualityCategoryType" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Default: QualityCategory.Excellent</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="fixedInventory" minOccurs="0">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="li" type="ThingDefCountClassType" minOccurs="0"
              maxOccurs="unbounded" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="inventoryOptions" type="PawnInventoryOptionType" minOccurs="0" />
      <xs:element name="invNutrition" type="xs:float" minOccurs="0" />
      <xs:element name="invFoodDef" type="DefNameType" minOccurs="0" />
      <xs:element name="chemicalAddictionChance" type="xs:float" minOccurs="0" />
      <xs:element name="combatEnhancingDrugsChance" type="xs:float" minOccurs="0" />
      <xs:element name="combatEnhancingDrugsCount" type="IntRangeType" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Default: IntRange.zero</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="forcedAddictions" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Default: new List&lt;ChemicalDef&gt;()</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element name="li" type="DefNameType" minOccurs="0" maxOccurs="unbounded" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="trader" type="xs:boolean" minOccurs="0" />
      <xs:element name="skills" minOccurs="0">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="li" type="SkillRangeType" minOccurs="0" maxOccurs="unbounded" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="requiredWorkTags" minOccurs="0">
        <xs:complexType>
          <xs:sequence minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="WorkTagType" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="disabledWorkTags" minOccurs="0">
        <xs:complexType>
          <xs:sequence minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="WorkTagType" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="extraSkillLevels" type="xs:integer" minOccurs="0" />
      <xs:element name="minTotalSkillLevels" type="xs:integer" minOccurs="0" />
      <xs:element name="minBestSkillLevel" type="xs:integer" minOccurs="0" />
      <xs:element name="labelMale" type="xs:string" minOccurs="0" />
      <xs:element name="labelMalePlural" type="xs:string" minOccurs="0" />
      <xs:element name="labelFemale" type="xs:string" minOccurs="0" />
      <xs:element name="labelFemalePlural" type="xs:string" minOccurs="0" />
      <xs:element name="wildGroupSize" type="IntRangeType" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Default: IntRange.one</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="ecoSystemWeight" type="xs:float" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Default: 1f</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="RaceProps" type="RacePropertiesType" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Default: &gt; this.race.race</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:all>

    <xs:attributeGroup ref="DefAttributeGroup" />
  </xs:complexType>
</xs:schema>