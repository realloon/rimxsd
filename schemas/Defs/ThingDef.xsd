<?xml version="1.0" encoding="UTF-8"?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:include schemaLocation="../Shared/custom.xsd" />
  <xs:include schemaLocation="../Shared/enum.xsd" />
  <xs:include schemaLocation="../Shared/common.xsd" />
  <xs:include schemaLocation="../Shared/attributes.xsd" />

  <xs:complexType name="ThingDefType">
    <xs:annotation>
      <xs:documentation>XML definition for RimWorld's ThingDef type.</xs:documentation>
    </xs:annotation>
    <xs:all>
      <!-- #region Inherit DefType -->
      <xs:element name="defName" type="DefNameType" minOccurs="0">
        <xs:annotation>
          <xs:documentation>The name of this Def. It is used as an identifier by the game code.
            Default: "UnnamedDef"</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="label" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>The name of this Def. It is used as an identifier by the game code.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="description" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>A human-readable description given when the Def is inspected by players.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="descriptionHyperlinks" minOccurs="0">
        <xs:complexType>
          <xs:sequence>
            <xs:any />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="ignoreConfigErrors" type="BooleanType" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Disables config error checking. Intended for mod use. (Be careful!)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="ignoreIllegalLabelCharacterConfigError" type="BooleanType" minOccurs="0" />
      <xs:element name="modExtensions" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Mod-specific data. Not used by core game code.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element name="li" type="DefModExtensionType" minOccurs="0" maxOccurs="unbounded" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="shortHash" type="xs:unsignedShort" minOccurs="0" />
      <xs:element name="index" type="xs:unsignedShort" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Default: ushort.MaxValue</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="modContentPack" minOccurs="0" />
      <xs:element name="fileName" type="xs:string" minOccurs="0" />
      <xs:element name="generated" type="BooleanType" minOccurs="0" />
      <xs:element name="debugRandomId" type="xs:unsignedShort" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Default: (ushort) Rand.RangeInclusive(0, (int) ushort.MaxValue)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <!-- #endregion -->

      <!-- #region Inherit BuildableDefType -->
      <xs:element name="passability" type="TraversabilityType" minOccurs="0" />
      <xs:element name="statBases" type="StatModifierListType" minOccurs="0" />
      <xs:element name="pathCost" type="xs:integer" minOccurs="0" />
      <xs:element name="pathCostIgnoreRepeat" type="BooleanType" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Default: true</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="fertility" type="xs:float" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Default: -1f</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="costList" type="GeneralAnyListType" minOccurs="0" />
      <xs:element name="costStuffCount" type="xs:integer" minOccurs="0" />
      <xs:element name="stuffCategories" minOccurs="0">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="DefNameType" />
          </xs:choice>
          <xs:attribute name="Inherit" type="BooleanType" />
        </xs:complexType>
      </xs:element>
      <xs:element name="stuffCategorySummary" type="xs:string" minOccurs="0" />
      <xs:element name="costListForDifficulty" type="CostListForDifficultyType" minOccurs="0" />
      <xs:element name="placingDraggableDimensions" type="xs:integer" minOccurs="0" />
      <xs:element name="clearBuildingArea" type="BooleanType" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Default: true</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="defaultPlacingRot" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Default: Rot4.North</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="resourcesFractionWhenDeconstructed" type="xs:float" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Default: 0.5f</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="blocksAltitudes" minOccurs="0">
        <xs:complexType>
          <xs:choice maxOccurs="unbounded">
            <xs:element name="li" type="AltitudeLayerType" minOccurs="0" maxOccurs="unbounded" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element name="dominantStyleCategory" type="xs:string" minOccurs="0" />
      <xs:element name="isAltar" type="BooleanType" minOccurs="0" />
      <xs:element name="useStuffTerrainAffordance" type="BooleanType" minOccurs="0" />
      <xs:element name="terrainAffordanceNeeded" minOccurs="0">
        <xs:complexType>
          <xs:simpleContent>
            <xs:extension base="xs:string">
              <xs:attribute name="IsNull" type="BooleanType" />
            </xs:extension>
          </xs:simpleContent>
        </xs:complexType>
      </xs:element>
      <xs:element name="buildingPrerequisites" minOccurs="0">
        <xs:complexType>
          <xs:choice maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" minOccurs="0" maxOccurs="unbounded" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element name="researchPrerequisites" minOccurs="0">
        <xs:complexType>
          <xs:choice maxOccurs="unbounded">
            <xs:element name="li" type="DefNameType" minOccurs="0"
              maxOccurs="unbounded" />
          </xs:choice>
          <xs:attribute name="Inherit" type="BooleanType" />
        </xs:complexType>
      </xs:element>
      <xs:element name="minMonolithLevel" type="xs:integer" minOccurs="0" />
      <xs:element name="constructionSkillPrerequisite" type="xs:integer" minOccurs="0" />
      <xs:element name="artisticSkillPrerequisite" type="xs:integer" minOccurs="0" />
      <xs:element name="minTechLevelToBuild" type="TechLevelType" minOccurs="0" />
      <xs:element name="maxTechLevelToBuild" type="TechLevelType" minOccurs="0" />
      <xs:element name="altitudeLayer" type="AltitudeLayerType" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Default: AltitudeLayer.Item</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="repairEffect" type="DefNameType" minOccurs="0" />
      <xs:element name="constructEffect" type="DefNameType" minOccurs="0" />
      <xs:element name="colorPerStuff" minOccurs="0">
        <xs:complexType>
          <xs:sequence minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="ColorForStuffType" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="canGenerateDefaultDesignator" type="BooleanType" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Default: true</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="ideoBuilding" type="BooleanType" minOccurs="0" />
      <xs:element name="specialDisplayRadius" type="xs:float" minOccurs="0" />
      <xs:element name="placeWorkers" minOccurs="0">
        <xs:complexType>
          <xs:choice maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" minOccurs="0" maxOccurs="unbounded" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element name="designationCategory" minOccurs="0">
        <xs:complexType>
          <xs:simpleContent>
            <xs:extension base="xs:string">
              <xs:attribute name="Inherit" type="BooleanType" />
            </xs:extension>
          </xs:simpleContent>
        </xs:complexType>
      </xs:element>
      <xs:element name="designatorDropdown" type="xs:string" minOccurs="0" />
      <xs:element name="designationHotKey" type="xs:string" minOccurs="0" />
      <xs:element name="uiOrder" type="xs:float" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Default: 2999f</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="uiIconPath" type="xs:string" minOccurs="0" />
      <xs:element name="uiIconPathsStuff" minOccurs="0">
        <xs:complexType>
          <xs:sequence minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="IconForStuffAppearanceType" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="uiIconOffset" type="xs:string" minOccurs="0" />
      <xs:element name="uiIconColor" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Default: Color.white</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="uiIconForStackCount" type="xs:integer" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Default: -1</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="blueprintDef" type="xs:string" minOccurs="0" />
      <xs:element name="installBlueprintDef" type="xs:string" minOccurs="0" />
      <xs:element name="frameDef" type="xs:string" minOccurs="0" />
      <xs:element name="graphic" type="GraphicType" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Default: BaseContent.BadGraphic</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="uiIcon" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Default: BaseContent.BadTex</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="uiIconAngle" type="xs:float" minOccurs="0" />
      <xs:element name="MadeFromStuff" type="BooleanType" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Default: &gt;
            !this.stuffCategories.NullOrEmpty&lt;StuffCategoryDef&gt;()</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="BuildableByPlayer" type="BooleanType" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Default: this.designationCategory != null</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="DrawMatSingle" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Default: this.graphic?.MatSingle</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Altitude" type="xs:float" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Default: this.altitudeLayer.AltitudeFor()</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="AffectsFertility" type="BooleanType" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Default: (double) this.fertility &gt;= 0.0</xs:documentation>
        </xs:annotation>
      </xs:element>
      <!-- #endregion -->

      <xs:element name="thingClass" type="xs:string" minOccurs="0" />
      <xs:element name="category" type="ThingCategoryType" minOccurs="0" />
      <xs:element name="tickerType" minOccurs="0">
        <xs:complexType>
          <xs:simpleContent>
            <xs:extension base="TickerTypeType">
              <xs:attribute name="MayRequire" type="DependenciesType" />
            </xs:extension>
          </xs:simpleContent>
        </xs:complexType>
      </xs:element>
      <xs:element name="stackLimit" type="xs:integer" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Default: 1</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="size" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Default: IntVec2.One</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="destroyable" type="BooleanType" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Default: true</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="rotatable" type="BooleanType" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Default: true</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="smallVolume" type="BooleanType" minOccurs="0" />
      <xs:element name="useHitPoints" type="BooleanType" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Default: true</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="receivesSignals" type="BooleanType" minOccurs="0" />
      <xs:element name="comps" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Default: CompProperties[]</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence maxOccurs="unbounded">
            <xs:element name="li" type="CompPropertiesType" minOccurs="0" maxOccurs="unbounded"></xs:element>
          </xs:sequence>
          <xs:attribute name="Inherit" type="BooleanType" />

        </xs:complexType>
      </xs:element>
      <xs:element name="virtualDefs" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Default: ThingDef[]</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:choice maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" minOccurs="0" maxOccurs="unbounded" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element name="virtualDefParent" type="xs:string" minOccurs="0" />
      <xs:element name="devNote" type="xs:string" minOccurs="0" />
      <!-- <xs:element name="killedLeavingsRanges" minOccurs="0">
        <xs:complexType>
          <xs:choice maxOccurs="unbounded">
            <xs:element name="li" type="ThingDefCountRangeClassType" minOccurs="0"
              maxOccurs="unbounded" />
          </xs:choice>
        </xs:complexType>
      </xs:element> -->
      <xs:element name="killedLeavings" type="GeneralAnyListType" minOccurs="0" />
      <!-- <xs:element name="killedLeavingsPlayerHostile" minOccurs="0">
        <xs:complexType>
          <xs:choice maxOccurs="unbounded">
            <xs:element name="li" type="ThingDefCountClassType" minOccurs="0" maxOccurs="unbounded" />
          </xs:choice>
        </xs:complexType>
      </xs:element> -->
      <xs:element name="killedLeavingsChance" type="xs:float" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Default: 1f</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="forceLeavingsAllowed" type="BooleanType" minOccurs="0" />
      <xs:element name="butcherProducts" type="GeneralAnyListType" minOccurs="0" />
      <xs:element name="smeltProducts" type="GeneralAnyListType" minOccurs="0" />
      <xs:element name="smeltable" type="BooleanType" minOccurs="0" />
      <xs:element name="burnableByRecipe" type="BooleanType" minOccurs="0" />
      <xs:element name="randomizeRotationOnSpawn" type="BooleanType" minOccurs="0" />
      <xs:element name="damageMultipliers" minOccurs="0">
        <xs:complexType>
          <xs:choice maxOccurs="unbounded">
            <xs:element name="li" type="DamageMultiplierType" minOccurs="0"
              maxOccurs="unbounded" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element name="isTechHediff" type="BooleanType" minOccurs="0" />
      <xs:element name="recipeMaker" type="RecipeMakerPropertiesType" minOccurs="0" />
      <xs:element name="minifiedDef" type="xs:string" minOccurs="0" />
      <xs:element name="isUnfinishedThing" type="BooleanType" minOccurs="0" />
      <xs:element name="leaveResourcesWhenKilled" type="BooleanType" minOccurs="0" />
      <xs:element name="slagDef" type="xs:string" minOccurs="0" />
      <xs:element name="isFrameInt" type="BooleanType" minOccurs="0" />
      <xs:element name="multipleInteractionCellOffsets" minOccurs="0">
        <xs:complexType>
          <xs:choice maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" minOccurs="0" maxOccurs="unbounded" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element name="interactionCellOffset" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Default: IntVec3.Zero</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="hasInteractionCell" type="BooleanType" minOccurs="0" />
      <xs:element name="interactionCellIcon" type="xs:string" minOccurs="0" />
      <xs:element name="interactionCellIconReverse" type="BooleanType" minOccurs="0" />
      <xs:element name="filthLeaving" type="xs:string" minOccurs="0" />
      <xs:element name="forceDebugSpawnable" type="BooleanType" minOccurs="0" />
      <xs:element name="intricate" type="BooleanType" minOccurs="0" />
      <xs:element name="scatterableOnMapGen" type="BooleanType" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Default: true</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="deepCommonality" type="xs:float" minOccurs="0" />
      <xs:element name="deepCountPerCell" type="xs:integer" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Default: 300</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="deepCountPerPortion" type="xs:integer" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Default: -1</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="deepLumpSizeRange" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Default: IntRange.zero</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="generateCommonality" type="xs:float" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Default: 1f</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="generateAllowChance" type="xs:float" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Default: 1f</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="startingHpRange" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Default: FloatRange.One</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="canOverlapZones" type="BooleanType" minOccurs="0" />
      <xs:element name="thingSetMakerTags" minOccurs="0">
        <xs:complexType>
          <xs:choice maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" minOccurs="0" maxOccurs="unbounded" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element name="alwaysFlee" type="BooleanType" minOccurs="0" />
      <xs:element name="recipes" type="DefNameListType" minOccurs="0" />
      <xs:element name="messageOnDeteriorateInStorage" type="BooleanType" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Default: true</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="deteriorateFromEnvironmentalEffects" type="BooleanType" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Default: true</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="canDeteriorateUnspawned" type="BooleanType" minOccurs="0" />
      <xs:element name="canLoadIntoCaravan" type="BooleanType" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Default: true</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="isMechClusterThreat" type="BooleanType" minOccurs="0" />
      <xs:element name="displayNumbersBetweenSameDefDistRange" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Default: FloatRange.Zero</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="minRewardCount" type="xs:integer" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Default: 1</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="preventSkyfallersLandingOn" type="BooleanType" minOccurs="0" />
      <xs:element name="requiresFactionToAcquire" type="DefNameType" minOccurs="0" />
      <xs:element name="relicChance" type="xs:float" minOccurs="0" />
      <xs:element name="orderedTakeGroup" type="xs:string" minOccurs="0" />
      <xs:element name="allowedArchonexusCount" type="xs:integer" minOccurs="0" />
      <xs:element name="possessionCount" type="xs:integer" minOccurs="0" />
      <xs:element name="notifyMapRemoved" type="BooleanType" minOccurs="0" />
      <xs:element name="canScatterOver" type="BooleanType" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Default: true</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="genericMarketSellable" type="BooleanType" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Default: true</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="drawHighlight" type="BooleanType" minOccurs="0" />
      <xs:element name="highlightColor" type="Vector3Type" minOccurs="0" />
      <xs:element name="autoTargetNearbyIdenticalThings" type="BooleanType" minOccurs="0" />
      <xs:element name="preventDroppingThingsOn" type="BooleanType" minOccurs="0" />
      <xs:element name="hiddenWhileUndiscovered" type="BooleanType" minOccurs="0" />
      <xs:element name="disableImpassableShotOverConfigError" type="BooleanType" minOccurs="0" />
      <xs:element name="showInSearch" type="BooleanType" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Default: true</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="graphicData" type="GraphicDataType" minOccurs="0" />
      <xs:element name="drawerType" type="DrawerTypeType" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Default: DrawerType.RealtimeOnly</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="drawOffscreen" type="BooleanType" minOccurs="0" />
      <xs:element name="colorGenerator" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Warn: No structural constraints!</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence minOccurs="0" maxOccurs="unbounded">
            <xs:any processContents="lax" />
          </xs:sequence>
          <xs:attribute name="Class" type="DefNameType" />
        </xs:complexType>
      </xs:element>
      <xs:element name="hideAtSnowDepth" type="xs:float" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Default: 99999f</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="drawDamagedOverlay" type="BooleanType" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Default: true</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="castEdgeShadows" type="BooleanType" minOccurs="0" />
      <xs:element name="staticSunShadowHeight" type="xs:float" minOccurs="0" />
      <xs:element name="useSameGraphicForGhost" type="BooleanType" minOccurs="0" />
      <xs:element name="useBlueprintGraphicAsGhost" type="BooleanType" minOccurs="0" />
      <xs:element name="randomStyle" minOccurs="0">
        <!-- <xs:complexType>
          <xs:choice maxOccurs="unbounded">
            <xs:element name="li" type="ThingStyleChanceType" minOccurs="0" maxOccurs="unbounded" />
          </xs:choice>
        </xs:complexType> -->
      </xs:element>
      <xs:element name="randomStyleChance" type="xs:float" minOccurs="0" />
      <xs:element name="canEditAnyStyle" type="BooleanType" minOccurs="0" />
      <xs:element name="defaultStuff" type="xs:string" minOccurs="0" />
      <xs:element name="killedLeavingsExpandRect" type="xs:integer" minOccurs="0" />
      <xs:element name="minifiedDrawScale" type="xs:float" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Default: 1f</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="overrideMinifiedRot" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Default: Rot4.Invalid</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="minifiedDrawOffset" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Default: Vector3.zero</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="deselectedSelectionBracketFactor" type="xs:float" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Default: 1f</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="selectable" type="BooleanType" minOccurs="0" />
      <xs:element name="containedPawnsSelectable" type="BooleanType" minOccurs="0" />
      <xs:element name="containedItemsSelectable" type="BooleanType" minOccurs="0" />
      <xs:element name="neverMultiSelect" type="BooleanType" minOccurs="0" />
      <xs:element name="isAutoAttackableMapObject" type="BooleanType" minOccurs="0" />
      <xs:element name="hasTooltip" type="BooleanType" minOccurs="0" />
      <xs:element name="inspectorTabs" type="DefNameListType" minOccurs="0" />
      <xs:element name="inspectorTabsResolved" minOccurs="0">
        <!-- <xs:complexType>
          <xs:choice maxOccurs="unbounded">
            <xs:element name="li" type="InspectTabBaseType" minOccurs="0" maxOccurs="unbounded" />
          </xs:choice>
        </xs:complexType> -->
      </xs:element>
      <xs:element name="seeThroughFog" type="BooleanType" minOccurs="0" />
      <xs:element name="drawGUIOverlay" type="BooleanType" minOccurs="0" />
      <xs:element name="drawGUIOverlayQuality" type="BooleanType" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Default: true</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="resourceReadoutPriority" type="ResourceCountPriorityType" minOccurs="0" />
      <xs:element name="resourceReadoutAlwaysShow" type="BooleanType" minOccurs="0" />
      <xs:element name="drawPlaceWorkersWhileSelected" type="BooleanType" minOccurs="0" />
      <xs:element name="drawPlaceWorkersWhileInstallBlueprintSelected" type="BooleanType"
        minOccurs="0" />
      <xs:element name="storedConceptLearnOpportunity" type="xs:string" minOccurs="0" />
      <xs:element name="uiIconScale" type="xs:float" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Default: 1f</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="hasCustomRectForSelector" type="BooleanType" minOccurs="0" />
      <xs:element name="hideStats" type="BooleanType" minOccurs="0" />
      <xs:element name="hideInspect" type="BooleanType" minOccurs="0" />
      <xs:element name="onlyShowInspectString" type="BooleanType" minOccurs="0" />
      <xs:element name="hideMainDesc" type="BooleanType" minOccurs="0" />
      <xs:element name="alwaysHaulable" type="BooleanType" minOccurs="0" />
      <xs:element name="designateHaulable" type="BooleanType" minOccurs="0" />
      <xs:element name="thingCategories" minOccurs="0">
        <xs:complexType>
          <xs:sequence minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" />
          </xs:sequence>
          <xs:attribute name="Inherit" type="BooleanType" />
        </xs:complexType>
      </xs:element>
      <xs:element name="mineable" type="BooleanType" minOccurs="0" />
      <xs:element name="socialPropernessMatters" type="BooleanType" minOccurs="0" />
      <xs:element name="stealable" type="BooleanType" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Default: true</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="soundSpawned" type="DefNameType" minOccurs="0" />
      <xs:element name="soundDrop" type="DefNameType" minOccurs="0" />
      <xs:element name="soundPickup" type="DefNameType" minOccurs="0" />
      <xs:element name="soundInteract" type="DefNameType" minOccurs="0" />
      <xs:element name="soundImpactDefault" type="DefNameType" minOccurs="0" />
      <xs:element name="soundPlayInstrument" type="DefNameType" minOccurs="0" />
      <xs:element name="soundOpen" type="DefNameType" minOccurs="0" />
      <xs:element name="saveCompressible" type="BooleanType" minOccurs="0" />
      <xs:element name="isSaveable" type="BooleanType" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Default: true</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="holdsRoof" type="BooleanType" minOccurs="0" />
      <xs:element name="fillPercent" type="xs:float" minOccurs="0" />
      <xs:element name="coversFloor" type="BooleanType" minOccurs="0" />
      <xs:element name="neverOverlapFloors" type="BooleanType" minOccurs="0" />
      <xs:element name="surfaceType" type="SurfaceTypeType" minOccurs="0" />
      <xs:element name="wipesPlants" type="BooleanType" minOccurs="0" />
      <xs:element name="blockPlants" type="BooleanType" minOccurs="0" />
      <xs:element name="blockLight" type="BooleanType" minOccurs="0" />
      <xs:element name="blockWind" type="BooleanType" minOccurs="0" />
      <xs:element name="blockWeather" type="BooleanType" minOccurs="0" />
      <xs:element name="tradeability" type="TradeabilityType" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Default: Tradeability.All</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="tradeTags" minOccurs="0">
        <xs:complexType>
          <xs:choice maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" minOccurs="0" maxOccurs="unbounded" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element name="tradeNeverStack" type="BooleanType" minOccurs="0" />
      <xs:element name="tradeNeverGenerateStacked" type="BooleanType" minOccurs="0" />
      <xs:element name="healthAffectsPrice" type="BooleanType" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Default: true</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="colorGeneratorInTraderStock" minOccurs="0">
        <xs:complexType>
          <xs:choice maxOccurs="unbounded">
            <xs:any></xs:any>
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element name="verbs" minOccurs="0">
        <xs:complexType>
          <xs:sequence minOccurs="0" maxOccurs="unbounded">
            <xs:element name="li" type="VerbPropertiesType" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="tools" minOccurs="0">
        <xs:complexType>
          <xs:choice maxOccurs="unbounded">
            <xs:element name="li" type="ToolType" minOccurs="0" maxOccurs="unbounded" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element name="equippedAngleOffset" type="xs:float" minOccurs="0" />
      <xs:element name="equippedDistanceOffset" type="xs:float" minOccurs="0" />
      <xs:element name="equipmentType" type="EquipmentTypeType" minOccurs="0" />
      <xs:element name="techLevel" type="TechLevelType" minOccurs="0" />
      <xs:element name="weaponClasses" minOccurs="0">
        <xs:complexType>
          <xs:choice maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" minOccurs="0" maxOccurs="unbounded" />
          </xs:choice>
          <xs:attribute name="Inherit" type="BooleanType" />
        </xs:complexType>
      </xs:element>
      <xs:element name="weaponTags" minOccurs="0">
        <xs:complexType>
          <xs:choice maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" minOccurs="0" maxOccurs="unbounded" />
          </xs:choice>
          <xs:attribute name="Inherit" type="BooleanType" />
        </xs:complexType>
      </xs:element>
      <xs:element name="techHediffsTags" minOccurs="0">
        <xs:complexType>
          <xs:choice maxOccurs="unbounded">
            <xs:element name="li" type="xs:string" minOccurs="0" maxOccurs="unbounded" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element name="violentTechHediff" type="BooleanType" minOccurs="0" />
      <xs:element name="destroyOnDrop" type="BooleanType" minOccurs="0" />
      <xs:element name="equippedStatOffsets" type="GeneralAnyListType" minOccurs="0" />
      <xs:element name="meleeHitSound" type="DefNameType" minOccurs="0" />
      <xs:element name="recoilPower" type="xs:float" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Default: 1f</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="recoilRelaxation" type="xs:float" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Default: 10f</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="rotateInShelves" type="BooleanType" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Default: true</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="mergeVerbGizmos" type="BooleanType" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Default: true</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="entityDefToBuild" type="DefNameType" minOccurs="0" />
      <xs:element name="projectileWhenLoaded" type="xs:string" minOccurs="0" />
      <xs:element name="ideoBuildingNamerBase" minOccurs="0">
        <xs:complexType>
          <xs:simpleContent>
            <xs:extension base="DefNameType">
              <xs:attribute name="MayRequire" type="DependenciesType" />
            </xs:extension>
          </xs:simpleContent>
        </xs:complexType>
      </xs:element>
      <xs:element name="entityCodexEntry" type="DefNameType" minOccurs="0" />
      <xs:element name="ingestible" type="IngestiblePropertiesType" minOccurs="0" />
      <xs:element name="filth" type="FilthPropertiesType" minOccurs="0" />
      <xs:element name="gas" type="DefNameType" minOccurs="0" />
      <xs:element name="building" type="BuildingPropertiesType" minOccurs="0" />
      <xs:element name="race" type="RacePropertiesType" minOccurs="0" />
      <xs:element name="apparel" type="ApparelPropertiesType" minOccurs="0" />
      <xs:element name="mote" type="MotePropertiesType" minOccurs="0" />
      <xs:element name="plant" type="PlantPropertiesType" minOccurs="0" />
      <xs:element name="projectile" type="ProjectilePropertiesType" minOccurs="0" />
      <xs:element name="stuffProps" type="StuffPropertiesType" minOccurs="0" />
      <xs:element name="skyfaller" type="SkyfallerPropertiesType" minOccurs="0" />
      <xs:element name="pawnFlyer" type="PawnFlyerPropertiesType" minOccurs="0" />
      <xs:element name="ritualFocus" type="RitualFocusPropertiesType" minOccurs="0" />
      <xs:element name="ingredient" type="IngredientPropertiesType" minOccurs="0" />
      <xs:element name="canBeUsedUnderRoof" type="BooleanType" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Default: true</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="interactionCellGraphic" type="GraphicType" minOccurs="0" />
      <xs:element name="EverHaulable" type="BooleanType" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Default: this.alwaysHaulable || this.designateHaulable</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="EverPollutable" type="BooleanType" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Default: !this.building.isNaturalRock</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="VolumePerUnit" type="xs:float" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Default: this.smallVolume ? 0.1f : 1f</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="DiscardOnDestroyed" type="BooleanType" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Default: this.race == null</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="BaseFlammability" type="xs:float" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Default: this.GetStatValueAbstract(StatDefOf.Flammability)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="BaseMass" type="xs:float" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Default: this.GetStatValueAbstract(StatDefOf.Mass)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Minifiable" type="BooleanType" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Default: this.minifiedDef != null</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="HasThingIDNumber" type="BooleanType" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Default: this.category != ThingCategory.Mote</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="CoexistsWithFloors" type="BooleanType" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Default: !this.neverOverlapFloors &amp;&amp; !this.coversFloor</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="MakeFog" type="BooleanType" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Default: this.Fillage == FillCategory.Full</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="CountAsResource" type="BooleanType" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Default: this.resourceReadoutPriority != 0</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="IsApparel" type="BooleanType" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Default: this.apparel != null</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="IsBed" type="BooleanType" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Default: typeof (Building_Bed).IsAssignableFrom(this.thingClass)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="IsCorpse" type="BooleanType" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Default: typeof (Corpse).IsAssignableFrom(this.thingClass)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="IsFrame" type="BooleanType" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Default: this.isFrameInt</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="IsStuff" type="BooleanType" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Default: this.stuffProps != null</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="IsMedicine" type="BooleanType" minOccurs="0" />
      <xs:element name="IsDoor" type="BooleanType" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Default: typeof (Building_Door).IsAssignableFrom(this.thingClass)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="IsFence" type="BooleanType" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Default: this.building != null &amp;&amp; this.building.isFence</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="IsFilth" type="BooleanType" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Default: this.filth != null</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="IsIngestible" type="BooleanType" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Default: this.ingestible != null</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="IsCommsConsole" type="BooleanType" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Default: typeof
            (Building_CommsConsole).IsAssignableFrom(this.thingClass)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="IsDrug" type="BooleanType" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Default: this.ingestible != null &amp;&amp; this.ingestible.drugCategory
            != 0</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="IsPleasureDrug" type="BooleanType" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Default: this.IsDrug &amp;&amp; (double) this.ingestible.joy 0.0</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="IsWorkTable" type="BooleanType" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Default: typeof (Building_WorkTable).IsAssignableFrom(this.thingClass)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="IsShell" type="BooleanType" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Default: this.projectileWhenLoaded != null</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="IsArt" type="BooleanType" minOccurs="0" />
      <xs:element name="IsSmoothable" type="BooleanType" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Default: this.building?.smoothedThing != null</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="IsSmoothed" type="BooleanType" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Default: this.building?.unsmoothedThing != null</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="IsGibbetCage" type="BooleanType" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Default: typeof (Building_GibbetCage).IsAssignableFrom(this.thingClass)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="IsMechGestator" type="BooleanType" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Default: typeof
            (Building_MechGestator).IsAssignableFrom(this.thingClass)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="IsMechRecharger" type="BooleanType" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Default: typeof (Building_MechCharger).IsAssignableFrom(this.thingClass)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="IsMeleeWeapon" type="BooleanType" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Default: this.IsWeapon &amp;&amp; !this.IsRangedWeapon</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="CanAffectLinker" type="BooleanType" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Default: this.graphicData != null &amp;&amp; this.graphicData.Linked ||
            this.IsDoor</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="IsPlant" type="BooleanType" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Default: typeof (Plant).IsAssignableFrom(this.thingClass)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="IsStudiable" type="BooleanType" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Default: this.HasAssignableCompFrom(typeof (CompStudiable))</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:all>

    <xs:attributeGroup ref="DefAttributeGroup" />
  </xs:complexType>
</xs:schema>